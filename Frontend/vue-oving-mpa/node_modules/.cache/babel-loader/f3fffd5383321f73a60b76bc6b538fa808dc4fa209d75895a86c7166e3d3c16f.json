{"ast":null,"code":"import { createVNode as _createVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode($setup[\"Navbar\"], {\n    pages: $data.pages,\n    activePage: $data.activePage\n  }, null, 8 /* PROPS */, [\"pages\", \"activePage\"]), $setup.isLoggedIn ? (_openBlock(), _createBlock(_component_router_view, {\n    key: 0\n  })) : (_openBlock(), _createBlock(_component_router_view, {\n    key: 1,\n    name: \"login\"\n  }))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","$setup","pages","$data","activePage","isLoggedIn","_createBlock","_component_router_view","key","name"],"sources":["C:\\Users\\sigau\\OneDrive - NTNU\\Dataingeniør S4\\IDATT2105 Full-stack applikasjonsutvikling\\Øvinger\\Øving 5\\Frontend\\vue-oving-mpa\\src\\App.vue"],"sourcesContent":["<template>\r\n  <navbar\r\n      :pages=\"pages\"\r\n      :activePage=\"activePage\"\r\n  ></navbar>\r\n\r\n  <router-view v-if=\"isLoggedIn\" />\r\n  <router-view v-else name=\"login\" />\r\n</template>\r\n\r\n<script setup>\r\nimport { authState } from '@/eventBus';\r\nimport { computed } from 'vue';\r\n\r\nconst isLoggedIn = computed(() => authState.isLoggedIn);\r\n</script>\r\n\r\n<script>\r\nimport PageViewer from '../src/components/PageViewer.vue'\r\nimport Navbar from '../src/components/Navbar.vue'\r\nimport Calculator from '../src/components/Calculator.vue'\r\nimport Contact from \"@/components/Contact.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    Navbar,\r\n    PageViewer,\r\n    Calculator,\r\n    Contact\r\n  },\r\n  created() {\r\n    this.getPages();\r\n  },\r\n  data () {\r\n    return {\r\n      activePage: 0,\r\n      pages: []\r\n    }\r\n  },\r\n  methods: {\r\n    async getPages() {\r\n      let res = await fetch('pages.json')\r\n      let data = await res.json()\r\n\r\n      this.pages = data;\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAGUC,MAAA;IAFLC,KAAK,EAAEC,KAAA,CAAAD,KAAK;IACZE,UAAU,EAAED,KAAA,CAAAC;oDAGEH,MAAA,CAAAI,UAAU,I,cAA7BC,YAAA,CAAiCC,sBAAA;IANnCC,GAAA;EAAA,O,cAOEF,YAAA,CAAmCC,sBAAA;IAPrCC,GAAA;IAOsBC,IAAI,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}